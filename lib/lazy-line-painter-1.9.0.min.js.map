{"version":3,"sources":["webpack://lazy-line-painter/webpack/universalModuleDefinition","webpack://lazy-line-painter/webpack/bootstrap","webpack://lazy-line-painter/./src/easing.js","webpack://lazy-line-painter/./src/events.js","webpack://lazy-line-painter/./src/index.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","easeLinear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","Math","cos","PI","easeOutSine","sin","easeInOutSine","easeInExpo","pow","easeOutExpo","easeInOutExpo","easeInCirc","sqrt","easeOutCirc","easeInOutCirc","easeInBounce","this","easeOutBounce","easeInOutBounce","EventEmitter","callback","_eventEmitterCallbacks","push","addListener","on","off","indexOf","splice","removeListener","emit","evt","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","iterator","next","done","err","return","trigger","_events","_interopRequireDefault","_easing","LazyLinePainter","el","config","_classCallCheck","classList","add","assign","strokeWidth","strokeDash","strokeColor","strokeOverColor","strokeCap","strokeJoin","strokeOpacity","delay","ease","drawSequential","speedMultiplier","reverse","paused","progress","longestDuration","log","offset","getBoundingClientRect","Events","__raf","__paths","_generatePaths","_parseDataAttrs","_updateDuration","_setupPaths","paths","Boolean","dataset","llpComposed","querySelectorAll","_uncomposed","length","path","id","replace","llpId","llpDuration","llpDelay","console","erase","_paint","cancelAnimationFrame","_this","requestAnimationFrame","adjustStartTime","startTime","elapsedTime","onStrokeCompleteDone","style","strokeDashoffset","onStrokeStartDone","remove","prop","_setProgress","_setDelay","_updatePaths","totalDuration","_getTotalDuration","_getLongestDuration","_calcPathDurations","startProgress","durationProgress","duration","positions","_getPathPoints","_updatePosition","Number","llpReverse","llpEase","_setStyleAttrs","llpStrokeColor","setAttributeNS","llpStrokeOpacity","llpStrokeWidth","llpStrokeCap","llpStrokeJoin","index","_getPathLength","strokeDasharray","_this2","timestamp","performance","now","_this3","_getProgress","pathProgress","_getElapsedProgress","_setLine","_updateStrokeCallbacks","elapsedProgress","linearProgress","Easing","round","position","x","left","y","top","pathDelay","pathTotalDuration","ceil","getTotalLength","arr","getPointAtLength","_getStrokeDashString","dashArray","strokeDashNum","strokeDashRemainder","strokeDashString","strokeDashArray","split","strokeDashTotal","floor","join"],"mappings":"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","file":"lazy-line-painter-1.9.0.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"lazy-line-painter\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"lazy-line-painter\"] = factory();\n\telse\n\t\troot[\"lazy-line-painter\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n","\nlet Easing = {\n\n  easeLinear(n) {\n    return n;\n  },\n\n  easeInQuad(n) {\n    return n * n;\n  },\n\n  easeOutQuad(n) {\n    return n * (2 - n);\n  },\n\n  easeInOutQuad(n) {\n    n *= 2;\n    if (n < 1) return 0.5 * n * n;\n    return -0.5 * (--n * (n - 2) - 1);\n  },\n\n  easeInCubic(n) {\n    return n * n * n;\n  },\n\n  easeOutCubic(n) {\n    return --n * n * n + 1;\n  },\n\n  easeInOutCubic(n) {\n    n *= 2;\n    if (n < 1) return 0.5 * n * n * n;\n    return 0.5 * ((n -= 2) * n * n + 2);\n  },\n\n  easeInQuart(n) {\n    return n * n * n * n;\n  },\n\n  easeOutQuart(n) {\n    return 1 - --n * n * n * n;\n  },\n\n  easeInOutQuart(n) {\n    n *= 2;\n    if (n < 1) return 0.5 * n * n * n * n;\n    return -0.5 * ((n -= 2) * n * n * n - 2);\n  },\n\n  easeInQuint(n) {\n    return n * n * n * n * n;\n  },\n\n  easeOutQuint(n) {\n    return --n * n * n * n * n + 1;\n  },\n\n  easeInOutQuint(n) {\n    n *= 2;\n    if (n < 1) return 0.5 * n * n * n * n * n;\n    return 0.5 * ((n -= 2) * n * n * n * n + 2);\n  },\n\n  easeInSine(n) {\n    return 1 - Math.cos(n * Math.PI / 2);\n  },\n\n  easeOutSine(n) {\n    return Math.sin(n * Math.PI / 2);\n  },\n\n  easeInOutSine(n) {\n    return 0.5 * (1 - Math.cos(Math.PI * n));\n  },\n\n  easeInExpo(n) {\n    return n === 0 ? 0 : Math.pow(1024, n - 1);\n  },\n\n  easeOutExpo(n) {\n    return n === 1 ? n : 1 - Math.pow(2, -10 * n);\n  },\n\n  easeInOutExpo(n) {\n    if (n === 0) return 0;\n    if (n === 1) return 1;\n    if ((n *= 2) < 1) return 0.5 * Math.pow(1024, n - 1);\n    return 0.5 * (-Math.pow(2, -10 * (n - 1)) + 2);\n  },\n\n  easeInCirc(n) {\n    return 1 - Math.sqrt(1 - n * n);\n  },\n\n  easeOutCirc(n) {\n    return Math.sqrt(1 - --n * n);\n  },\n\n  easeInOutCirc(n) {\n    n *= 2;\n    if (n < 1) return -0.5 * (Math.sqrt(1 - n * n) - 1);\n    return 0.5 * (Math.sqrt(1 - (n -= 2) * n) + 1);\n  },\n\n  easeInBounce(n) {\n    return 1 - this.easeOutBounce(1 - n);\n  },\n\n  easeOutBounce(n) {\n    if (n < 1 / 2.75) {\n      return 7.5625 * n * n;\n    } else if (n < 2 / 2.75) {\n      return 7.5625 * (n -= 1.5 / 2.75) * n + 0.75;\n    } else if (n < 2.5 / 2.75) {\n      return 7.5625 * (n -= 2.25 / 2.75) * n + 0.9375;\n    }\n    return 7.5625 * (n -= 2.625 / 2.75) * n + 0.984375;\n\n  },\n\n  easeInOutBounce(n) {\n    if (n < 0.5) return this.easeInBounce(n * 2) * 0.5;\n    return this.easeOutBounce(n * 2 - 1) * 0.5 + 0.5;\n  }\n};\n\nexport default Easing;\n\n","let EventEmitter = {};\n\nEventEmitter.on = function (name, callback) {\n  this._eventEmitterCallbacks = this._eventEmitterCallbacks || {};\n  this._eventEmitterCallbacks[name] = this._eventEmitterCallbacks[name] || [];\n  this._eventEmitterCallbacks[name].push(callback);\n};\nEventEmitter.addListener = EventEmitter.on;\n\nEventEmitter.off = function (name, callback) {\n  this._eventEmitterCallbacks = this._eventEmitterCallbacks || {};\n  if (!(name in this._eventEmitterCallbacks)) return;\n  const i = this._eventEmitterCallbacks[name].indexOf(callback);\n\n  if (i < 0) return;\n  this._eventEmitterCallbacks[name].splice(i, 1);\n};\nEventEmitter.removeListener = EventEmitter.off;\n\nEventEmitter.emit = function (name, evt) {\n  this._eventEmitterCallbacks = this._eventEmitterCallbacks || {};\n  if (!(name in this._eventEmitterCallbacks)) return;\n  for (let callback of this._eventEmitterCallbacks[name]) {\n    if (typeof callback !== 'function') return;\n    callback(evt);\n  }\n};\nEventEmitter.trigger = EventEmitter.emit;\n\nexport default EventEmitter;\n","/*\n * Lazy Line Painter\n * SVG Stroke animation.\n *\n * https://github.com/camoconnell/lazy-line-painter\n * http://www.camoconnell.com\n *\n * Copyright 2013-2018 Cam O'Connell\n * All rights reserved.\n *\n * Licensed under the MIT license.\n *\n */\n\nimport Events from './events';\nimport Easing from './easing';\n\nclass LazyLinePainter {\n\n  /**\n   * init\n   * Responsible for caching user options,\n   * @public\n   * @param  {object} opts user defined options\n   */\n\n  constructor(el, config) {\n\n    this.el = el;\n    this.el.classList.add('lazy-line-painter');\n\n    this.config = Object.assign({\n\n      strokeWidth: null,\n      strokeDash: null,\n      strokeColor: null,\n      strokeOverColor: null,\n      strokeCap: null,\n      strokeJoin: null,\n      strokeOpacity: null,\n\n      delay: 0,\n      ease: null,\n      drawSequential: false,\n      speedMultiplier: 1,\n      reverse: false,\n      paused: false,\n      progress: 0,\n\n      longestDuration: 0,\n      log: true,\n      offset: this.el.getBoundingClientRect()\n\n    }, config, {});\n\n    Object.assign(this, Events, {});\n\n    this.__raf = null;\n    this.__paths = [];\n\n    this._generatePaths();\n    this._parseDataAttrs();\n    this._updateDuration();\n    this._setupPaths();\n\n  }\n\n  _generatePaths() {\n\n    let paths;\n    let composed = Boolean(this.el.dataset.llpComposed);\n\n    if (composed) {\n      paths = this.el.querySelectorAll('[data-llp-id]');\n    } else {\n      paths = this._uncomposed();\n    }\n\n    for (let i = 0; i < paths.length; i++) {\n\n      let path = {\n        el: paths[i]\n      };\n\n      this.__paths.push(path);\n    }\n  }\n\n  _uncomposed() {\n    let paths = this.el.querySelectorAll('path, polygon, circle, ellipse, polyline, line, rect');\n    let i;\n\n    for (i = 0; i < paths.length; i++) {\n      let id = this.el.id.replace(/ /g, '');\n\n      id = id.replace('.', '');\n      id = id.replace('-', '');\n      paths[i].dataset.llpId = id + '-' + i;\n      paths[i].dataset.llpDuration = 5000;\n      paths[i].dataset.llpDelay = 0;\n    }\n\n    if (this.config.log) {\n      console.log('This lazy line is uncomposed! Visit http://lazylinepainter.info to compose your masterpiece!');\n    }\n\n    return paths;\n  }\n\n  /**\n   * init\n   */\n\n  // init() {\n  //   return new Promise((resolve, reject) => {\n  //     this._init();\n  //     console.log('__initialised');\n  //     resolve();\n  //   });\n  // }\n\n  /**\n   * paint\n   * Responsible for drawing path.\n   * @public\n   */\n\n  paint() {\n\n    console.log('__paint');\n\n    this.erase();\n\n    // begin animation\n    this._paint();\n\n    // fire start callback\n    this.emit('start');\n  }\n\n  /**\n   * pause\n   * Responsible for pausing path animation.\n   * @public\n   */\n  pause() {\n    if (!this.config.paused) {\n      this.config.paused = true;\n      cancelAnimationFrame(this.__raf);\n    }\n  }\n\n  /**\n   * resume\n   * Responsible for resuming path animation.\n   * @public\n   */\n  resume() {\n    if (this.config.paused) {\n      requestAnimationFrame(() => {\n        this.adjustStartTime();\n      });\n      this.config.paused = false;\n    }\n  }\n\n  /**\n   * erase\n   * Responsible for clearing path,\n   * paint can still be called on the element after it has been erased.\n   * @public\n   */\n  erase() {\n\n    // reset / cancel rAF\n    this.config.startTime = null;\n    this.config.elapsedTime = null;\n    cancelAnimationFrame(this.__raf);\n\n    // reset callback\n    this.config.onStrokeCompleteDone = false;\n\n    // reset paused\n    this.config.paused = false;\n\n    // empty contents of svg\n    for (let i = 0; i < this.__paths.length; i++) {\n      let path = this.__paths[i];\n\n      path.el.style.strokeDashoffset = path.length;\n      path.onStrokeCompleteDone = false;\n      path.onStrokeStartDone = false;\n    }\n  }\n\n  /**\n   * destroy\n   * Responsible for removing lazyline data and element from DOM\n   * @public\n   */\n  destroy() {\n\n    // retrieve / remove data object\n    this.config = null;\n\n    // empty container element\n    this.el.remove();\n    this.el = null;\n\n  }\n\n  /**\n   * set\n   * @public\n   */\n  set(prop, value) {\n    switch (prop) {\n      case 'progress':\n        this._setProgress(value);\n        break;\n      case 'delay':\n        this._setDelay(value);\n        break;\n      default:\n        if (this.config.log) {\n          console.log('property ' + prop + ' can not be set');\n        }\n    }\n  }\n\n  _setProgress(progress) {\n    this.config.progress = progress;\n    this._updatePaths();\n  }\n\n  _setDelay(delay) {\n    this.config.delay = delay;\n    this._updateDuration();\n  }\n\n  _updateDuration() {\n\n    let totalDuration = this._getTotalDuration();\n    let longestDuration = this._getLongestDuration();\n\n    this.config.totalDuration = this.config.drawSequential ? totalDuration : longestDuration;\n    this.config.totalDuration += this.config.delay;\n\n    this._calcPathDurations();\n  }\n\n  _calcPathDurations() {\n\n    for (let i = 0; i < this.__paths.length; i++) {\n\n      let path = this.__paths[i];\n      let startTime;\n\n      path.progress = 0;\n\n      if (this.config.drawSequential) {\n        startTime = 0;\n      } else {\n        startTime = this.config.delay + path.delay;\n      }\n\n      path.startTime = startTime;\n      path.startProgress = (path.startTime / this.config.totalDuration);\n      path.durationProgress = (path.duration / this.config.totalDuration);\n    }\n  }\n\n  /**\n   * get\n   * @public\n   */\n  get() {\n    return this.config;\n  }\n\n  /**\n   * resize\n   * @public\n   */\n  resize() {\n\n    this.config.offset = this.el.getBoundingClientRect();\n    // this.config.scale = this.config.offset.width / this.config.width;\n\n    for (let i = 0; i < this.__paths.length; i++) {\n      let path = this.__paths[i];\n\n      path.el.getBoundingClientRect();\n      path.positions = this._getPathPoints(path.el, path.length);\n      this._updatePosition(path);\n    }\n  }\n\n  _parseDataAttrs() {\n    for (let i = 0; i < this.__paths.length; i++) {\n      let path = this.__paths[i];\n\n      path.id = path.el.dataset.llpId;\n      path.delay = Number(path.el.dataset.llpDelay) || 0;\n      path.duration = Number(path.el.dataset.llpDuration) || 0;\n      path.reverse = Boolean(path.el.dataset.llpReverse) || false;\n      path.ease = Number(path.el.dataset.llpEase) || null;\n      // path.strokeDash = path.el.dataset.llpStrokeDash || null;\n      path.delay *= this.config.speedMultiplier;\n      path.duration *= this.config.speedMultiplier;\n\n      this._setStyleAttrs(path);\n    }\n  }\n\n  _setStyleAttrs(path) {\n\n    path.strokeColor = (path.el.dataset.llpStrokeColor || this.config.strokeColor);\n\n    if (path.strokeColor) {\n      path.el.setAttributeNS(null, 'stroke', path.strokeColor);\n    }\n\n    path.strokeOpacity = (path.el.dataset.llpStrokeOpacity || this.config.strokeOpacity);\n    if (path.strokeOpacity) {\n      path.el.setAttributeNS(null, 'stroke-opacity', path.strokeOpacity);\n    }\n\n    path.strokeWidth = (path.el.dataset.llpStrokeWidth || this.config.strokeWidth);\n    if (path.strokeWidth) {\n      path.el.setAttributeNS(null, 'stroke-width', path.strokeWidth);\n    }\n\n    path.strokeCap = (path.el.dataset.llpStrokeCap || this.config.strokeCap);\n    if (path.strokeCap) {\n      path.el.setAttributeNS(null, 'stroke-linecap', path.strokeCap);\n    }\n\n    path.strokeJoin = (path.el.dataset.llpStrokeJoin || this.config.strokeJoin);\n    if (path.strokeJoin) {\n      path.el.setAttributeNS(null, 'stroke-linejoin', path.strokeJoin);\n    }\n  }\n\n  _setupPaths() {\n\n    for (let i = 0; i < this.__paths.length; i++) {\n\n      let path = this.__paths[i];\n\n      path.index = i;\n      path.length = this._getPathLength(path.el);\n      path.positions = this._getPathPoints(path.el, path.length);\n\n      path.el.style.strokeDashoffset = path.length;\n      path.el.style.strokeDasharray = path.length;\n\n      path.onStrokeStartDone = false;\n      path.onStrokeCompleteDone = false;\n    }\n  };\n\n  /**\n   * adjustStartTime\n   * Responsible for managing time.\n   * @private\n   * @param  {number} timestamp identifies current time\n   * @param  {object} data      contains options set on init() and paint()\n   */\n  adjustStartTime() {\n    let timestamp = performance.now();\n\n    this.config.startTime = timestamp - this.config.elapsedTime;\n    requestAnimationFrame(() => {\n      this._paint();\n    });\n  }\n\n  /**\n   * _paint\n   * Responsible for animating paths.\n   * Path incrementation is performed using requestAnimationFrame.\n   * @private\n   * @param  {number} timestamp   identifies current time\n   * @param  {object} data        contains options set on init() and paint()\n   */\n  _paint() {\n\n    if (!this.config) {\n      return;\n    }\n\n    // set startTime\n    if (!this.config.startTime) {\n      this.config.startTime = performance.now(); // new Date()\n    }\n\n    this.emit('update');\n\n    // set elapsedTime\n    let timestamp = performance.now();\n\n    this.config.elapsedTime = (timestamp - this.config.startTime);\n    let progress;\n\n    if (this.config.reverse) {\n      progress = (1 - (this.config.elapsedTime / this.config.totalDuration));\n    } else {\n      progress = (this.config.elapsedTime / this.config.totalDuration);\n    }\n\n    this.config.progress = this._getProgress(progress, this.config.ease);\n\n    this._updatePaths();\n\n    if (progress >= 0 && progress <= 1) {\n      this.__raf = requestAnimationFrame(() => {\n        this._paint();\n      });\n    } else {\n      this.emit('complete');\n    }\n  }\n\n  _updatePaths() {\n\n    for (let i = 0; i < this.__paths.length; i++) {\n      let path = this.__paths[i];\n      let pathProgress = this._getElapsedProgress(path);\n\n      path.progress = this._getProgress(pathProgress, path.ease);\n      this._setLine(path);\n      this._updatePosition(path);\n      this._updateStrokeCallbacks(path);\n    }\n  }\n\n  _getElapsedProgress(path) {\n\n    let elapsedProgress;\n\n    if (\n      this.config.progress >= path.startProgress &&\n      this.config.progress <= (path.startProgress + path.durationProgress)\n    ) {\n      elapsedProgress = (this.config.progress - path.startProgress) / path.durationProgress;\n    } else if (this.config.progress >= (path.startProgress + path.durationProgress)) {\n      elapsedProgress = 1;\n    } else if (this.config.progress <= path.startProgress) {\n      elapsedProgress = 0;\n    }\n\n    return elapsedProgress;\n  }\n\n  _getProgress(linearProgress, ease) {\n\n    let progress = linearProgress;\n\n    if (ease) {\n      progress = Easing[ease](linearProgress);\n    }\n    return progress;\n  }\n\n  _setLine(path) {\n\n    let el = path.el;\n    let length = path.progress * path.length;\n\n    if (/* this.config.reverse || */path.reverse) {\n      el.style.strokeDashoffset = -path.length + length;\n    } else {\n      el.style.strokeDashoffset = path.length - length;\n    }\n  }\n\n  _updateStrokeCallbacks(path) {\n\n    if (path.progress === 1) {\n\n      if (!path.onStrokeCompleteDone) {\n        path.onStrokeCompleteDone = true;\n\n        this.emit('complete:' + path.id, path);\n        this.emit('complete:all', path);\n      }\n\n    } else if (path.progress > 0.00001) {\n\n      if (!path.onStrokeStartDone) {\n        this.emit('start:' + path.id, path);\n        this.emit('start:all', path);\n        path.onStrokeStartDone = true;\n      }\n\n      this.emit('update:' + path.id, path);\n      this.emit('update:all', path);\n    }\n  }\n\n  /**\n   * _updatePosition\n   * Responsible for updating the paths x / y position.\n   * @private\n   */\n  _updatePosition(path) {\n    let index = Math.round((path.progress * (path.length - 1)));\n    let position = path.positions[index];\n\n    path.position = {\n      x: this.config.offset.left + position.x,\n      y: this.config.offset.top + position.y\n    };\n  }\n\n  _getTotalDuration() {\n\n    let totalDuration = 0;\n    let paths = this.__paths;\n\n    for (let i = 0; i < paths.length; i++) {\n      let pathDelay = paths[i].delay || 0;\n\n      totalDuration += (paths[i].duration + pathDelay);\n    }\n\n    return totalDuration;\n  }\n\n  _getLongestDuration() {\n\n    let longestDuration = 0;\n    let paths = this.__paths;\n\n    for (let i = 0; i < paths.length; i++) {\n      let pathTotalDuration = paths[i].delay + paths[i].duration;\n\n      if (pathTotalDuration > longestDuration) {\n        longestDuration = pathTotalDuration;\n      }\n    }\n\n    return longestDuration;\n  };\n\n  /**\n   * _getPathLength\n   * Responsible for returning a svg path length.\n   * @return {number} path length\n   */\n  _getPathLength(el) {\n    return Math.ceil(el.getTotalLength());\n  }\n\n  /**\n   * _getPathPoints\n   * Responsible for returning a svg path coords.\n   * @return {array} path coords\n   */\n  _getPathPoints(el, length) {\n\n    let arr = [];\n\n    for (let i = 0; i < length; i++) {\n      let position = el.getPointAtLength(i);\n\n      arr.push({\n        x: position.x,\n        y: position.y\n      });\n    };\n    return arr;\n  }\n\n  /**\n   * _getStrokeDashArray\n   * @private\n   */\n  _getStrokeDashArray(path, length) {\n    let strokeDash;\n\n    if (path.strokeDash) {\n      strokeDash = this._getStrokeDashString(path.strokeDash, length);\n    } else if (this.config.strokeDash) {\n      strokeDash = this._getStrokeDashString(this.config.strokeDash, length);\n    } else {\n      strokeDash = length + ' ' + length;\n    };\n    return strokeDash;\n  }\n\n  /**\n   * _getStrokeDashString\n   * @private\n   */\n  _getStrokeDashString(dashArray, length) {\n    let strokeDashString = '';\n    let strokeDashArray = dashArray.split(',');\n    let strokeDashTotal = 0;\n    let strokeDashNum;\n    let strokeDashRemainder;\n\n    for (let i = strokeDashArray.length - 1; i >= 0; i--) {\n      strokeDashTotal += Number(strokeDashArray[i]);\n    };\n    strokeDashNum = Math.floor(length / strokeDashTotal);\n    strokeDashRemainder = length - (strokeDashNum * strokeDashTotal);\n    for (let i = strokeDashNum - 1; i >= 0; i--) {\n      strokeDashString += (dashArray + ', ');\n    };\n    let preArray = strokeDashString + strokeDashRemainder + ', ' + length;\n\n    return preArray.split(',').join('px,') + 'px';\n  }\n\n}\nwindow.LazyLinePainter = LazyLinePainter;\nexport default LazyLinePainter;\n"],"sourceRoot":""}