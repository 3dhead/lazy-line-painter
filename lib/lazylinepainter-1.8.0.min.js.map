{"version":3,"sources":["webpack://lazylinepainter/webpack/universalModuleDefinition","webpack://lazylinepainter/webpack/bootstrap","webpack://lazylinepainter/./src/index.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","LazyLinePainter","config","_classCallCheck","this","easing","easeLinear","b","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","Math","cos","PI","easeOutSine","sin","easeInOutSine","easeInExpo","pow","easeOutExpo","easeInOutExpo","easeInCirc","sqrt","easeOutCirc","easeInOutCirc","easeInBack","undefined","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","className","rAF","$el","document","getElementById","id","classList","add","options","_getOptions","totalDuration","delay","_getTotalDuration","paths","longestDuration","_getLongestDuration","drawSequential","_setupPaths","speedMultiplier","append","svg","resize","_this","erase","requestAnimationFrame","timestamp","_paint","onStart","paused","cancelAnimationFrame","_this2","adjustStartTime","startTime","elapsedTime","onStrokeCompleteDone","length","path","el","style","strokeDashoffset","onStrokeStartDone","firstChild","removeChild","remove","progress","_updatePaths","offset","left","offsetLeft","top","offsetTop","_updatePosition","assign","strokeWidth","strokeDash","strokeColor","strokeOverColor","strokeCap","strokeJoin","strokeOpacity","onComplete","onUpdate","onStrokeStart","onStrokeComplete","ease","overrideKey","reverse","playhead","target","width","svgData","dimensions","height","strokepath","_getSVGElement","index","_getPath","_getPathLength","duration","positions","_getPathPoints","strokeDasharray","_getStrokeDashArray","display","getBoundingClientRect","onStrokeUpdate","startProgress","durationProgress","_this3","_this4","_getProgress","elapsedProgress","_getElapsedProgress","_setLine","_updateStrokeCallbacks","start","elapsed","round","position","x","y","pathDelay","createElementNS","appendChild","_setAttributes","ceil","getTotalLength","arr","getPointAtLength","push","data","setAttributeNS","viewBox","setAttribute","_getStrokeDashString","dashArray","strokeDashNum","strokeDashRemainder","strokeDashString","strokeDashArray","split","strokeDashTotal","Number","floor","join"],"mappings":"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","file":"lazylinepainter-1.8.0.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"lazylinepainter\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"lazylinepainter\"] = factory();\n\telse\n\t\troot[\"lazylinepainter\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","/*\n * Lazy Line Painter\n * SVG Stroke animation.\n *\n * https://github.com/camoconnell/lazy-line-painter\n * http://www.camoconnell.com\n *\n * Copyright 2013-2015 Cam O'Connell\n * All rights reserved.\n *\n * Licensed under the MIT license.\n *\n */\n\n/*\n *\n * TERMS OF USE - EASING EQUATIONS\n *\n * Open source under the BSD License.\n *\n * Copyright Â© 2001 Robert Penner\n * All rights reserved.\n *\n */\n\nexport class LazyLinePainter {\n\n  /**\n   * init\n   * Responsible for caching user options,\n   * creating svg element and setting dimensions.\n   * @public\n   * @param  {object} opts user defined options\n   */\n\n  constructor(config) {\n\n    this.easing = {\n\n      easeLinear(t, b, c, d) {\n        return c * t / d + b;\n      },\n\n      easeInQuad(t, b, c, d) {\n        return c * (t /= d) * t + b;\n      },\n\n      easeOutQuad(t, b, c, d) {\n        return -c * (t /= d) * (t - 2) + b;\n      },\n\n      easeInOutQuad(t, b, c, d) {\n        if ((t /= d / 2) < 1) return c / 2 * t * t + b;\n        return -c / 2 * ((--t) * (t - 2) - 1) + b;\n      },\n\n      easeInCubic(t, b, c, d) {\n        return c * (t /= d) * t * t + b;\n      },\n\n      easeOutCubic(t, b, c, d) {\n        return c * ((t = t / d - 1) * t * t + 1) + b;\n      },\n\n      easeInOutCubic(t, b, c, d) {\n        if ((t /= d / 2) < 1) return c / 2 * t * t * t + b;\n        return c / 2 * ((t -= 2) * t * t + 2) + b;\n      },\n\n      easeInQuart(t, b, c, d) {\n        return c * (t /= d) * t * t * t + b;\n      },\n\n      easeOutQuart(t, b, c, d) {\n        return -c * ((t = t / d - 1) * t * t * t - 1) + b;\n      },\n\n      easeInOutQuart(t, b, c, d) {\n        if ((t /= d / 2) < 1) return c / 2 * t * t * t * t + b;\n        return -c / 2 * ((t -= 2) * t * t * t - 2) + b;\n      },\n\n      easeInQuint(t, b, c, d) {\n        return c * (t /= d) * t * t * t * t + b;\n      },\n\n      easeOutQuint(t, b, c, d) {\n        return c * ((t = t / d - 1) * t * t * t * t + 1) + b;\n      },\n\n      easeInOutQuint(t, b, c, d) {\n        if ((t /= d / 2) < 1) return c / 2 * t * t * t * t * t + b;\n        return c / 2 * ((t -= 2) * t * t * t * t + 2) + b;\n      },\n\n      easeInSine(t, b, c, d) {\n        return -c * Math.cos(t / d * (Math.PI / 2)) + c + b;\n      },\n\n      easeOutSine(t, b, c, d) {\n        return c * Math.sin(t / d * (Math.PI / 2)) + b;\n      },\n\n      easeInOutSine(t, b, c, d) {\n        return -c / 2 * (Math.cos(Math.PI * t / d) - 1) + b;\n      },\n\n      easeInExpo(t, b, c, d) {\n        return (t === 0) ? b : c * Math.pow(2, 10 * (t / d - 1)) + b;\n      },\n\n      easeOutExpo(t, b, c, d) {\n        return (t === d) ? b + c : c * (-Math.pow(2, -10 * t / d) + 1) + b;\n      },\n\n      easeInOutExpo(t, b, c, d) {\n        if (t === 0) return b;\n        if (t === d) return b + c;\n        if ((t /= d / 2) < 1) return c / 2 * Math.pow(2, 10 * (t - 1)) + b;\n        return c / 2 * (-Math.pow(2, -10 * --t) + 2) + b;\n      },\n\n      easeInCirc(t, b, c, d) {\n        return -c * (Math.sqrt(1 - (t /= d) * t) - 1) + b;\n      },\n\n      easeOutCirc(t, b, c, d) {\n        return c * Math.sqrt(1 - (t = t / d - 1) * t) + b;\n      },\n\n      easeInOutCirc(t, b, c, d) {\n        if ((t /= d / 2) < 1) return -c / 2 * (Math.sqrt(1 - t * t) - 1) + b;\n        return c / 2 * (Math.sqrt(1 - (t -= 2) * t) + 1) + b;\n      },\n\n      easeInBack(t, b, c, d, s) {\n        if (s === undefined) s = 1.70158;\n        return c * (t /= d) * t * ((s + 1) * t - s) + b;\n      },\n\n      easeOutBack(t, b, c, d, s) {\n        if (s === undefined) s = 1.70158;\n        return c * ((t = t / d - 1) * t * ((s + 1) * t + s) + 1) + b;\n      },\n\n      easeInOutBack(t, b, c, d, s) {\n        if (s === undefined) s = 1.70158;\n        if ((t /= d / 2) < 1) return c / 2 * (t * t * (((s *= (1.525)) + 1) * t - s)) + b;\n        return c / 2 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2) + b;\n      },\n\n      easeInBounce(t, b, c, d) {\n        return c - this.easing.easeOutBounce(d - t, 0, c, d) + b;\n      },\n\n      easeOutBounce(t, b, c, d) {\n        if ((t /= d) < (1 / 2.75)) {\n          return c * (7.5625 * t * t) + b;\n        } else if (t < (2 / 2.75)) {\n          return c * (7.5625 * (t -= (1.5 / 2.75)) * t + 0.75) + b;\n        } else if (t < (2.5 / 2.75)) {\n          return c * (7.5625 * (t -= (2.25 / 2.75)) * t + 0.9375) + b;\n        }\n        return c * (7.5625 * (t -= (2.625 / 2.75)) * t + 0.984375) + b;\n\n      },\n\n      easeInOutBounce(t, b, c, d) {\n        if (t < d / 2) return this.easing.easeInBounce(t * 2, 0, c, d) * 0.5 + b;\n        return this.easing.easeOutBounce(t * 2 - d, 0, c, d) * 0.5 + c * 0.5 + b;\n      }\n    };\n\n    this.className = 'lazylinepainter';\n\n    this.rAF = null;\n\n    this.$el = document.getElementById(config.id);\n\n    this.$el.classList.add(this.className);\n\n    this.options = this._getOptions(config);\n    let totalDuration = this.options.delay + this._getTotalDuration(this.options.paths);\n    let longestDuration = this.options.delay + this._getLongestDuration(this.options.paths);\n\n    this.options.totalDuration = this.options.drawSequential ? totalDuration : longestDuration;\n    this._setupPaths();\n    this.options.totalDuration *= this.options.speedMultiplier;\n\n    this.$el.append(this.options.svg);\n    this.resize();\n  }\n\n  /**\n   * paint\n   * Responsible for drawing path.\n   * @public\n   */\n  paint() {\n\n    this.erase();\n\n    // begin animation\n    this.rAF = requestAnimationFrame((timestamp) => {\n      this._paint(timestamp);\n    });\n\n    // fire onStart callback\n    if (this.options.onStart !== null) {\n      this.options.onStart();\n    }\n  }\n\n  /**\n   * pause\n   * Responsible for pausing path animation.\n   * @public\n   */\n  pause() {\n    if (!this.options.paused) {\n      this.options.paused = true;\n      cancelAnimationFrame(this.rAF);\n    }\n  }\n\n  /**\n   * resume\n   * Responsible for resuming path animation.\n   * @public\n   */\n  resume() {\n    if (this.options.paused) {\n      requestAnimationFrame((timestamp) => {\n        this.adjustStartTime(timestamp);\n      });\n      this.options.paused = false;\n    }\n  }\n\n  /**\n   * erase\n   * Responsible for clearing path,\n   * paint can still be called on the element after it has been erased.\n   * @public\n   */\n  erase() {\n\n    // reset / cancel rAF\n    this.options.startTime = null;\n    this.options.elapsedTime = null;\n    cancelAnimationFrame(this.rAF);\n\n    // reset callback\n    this.options.onStrokeCompleteDone = false;\n\n    // reset paused\n    this.options.paused = false;\n\n    // empty contents of svg\n    for (let i = 0; i < this.options.paths.length; i++) {\n      let path = this.options.paths[i];\n\n      path.el.style.strokeDashoffset = path.length;\n      path.onStrokeCompleteDone = false;\n      path.onStrokeStartDone = false;\n    }\n  }\n\n  /**\n   * destroy\n   * Responsible for removing lazyline data and element from DOM\n   * @public\n   */\n  destroy() {\n\n    // retrieve / remove data object\n    this.options = null;\n\n    // empty container element\n    while (this.$el.firstChild) {\n      this.$el.removeChild(this.$el.firstChild);\n    }\n\n    // remove class\n    this.$el.classList.remove(this.className);\n  }\n\n  /**\n   * set\n   * @public\n   */\n  set(progress) {\n    // set elapsedTime\n    this.options.progress = progress;\n    this._updatePaths();\n  }\n\n  /**\n   * get\n   * @public\n   */\n  get() {\n    return this.options;\n  }\n\n  /**\n   * resize\n   * @public\n   */\n  resize() {\n\n    this.options.offset = {\n      left: this.$el.offsetLeft,\n      top: this.$el.offsetTop\n    };\n\n    for (let i = 0; i < this.options.paths.length; i++) {\n      this._updatePosition(this.options.paths[i]);\n    }\n  }\n\n  _getOptions(config) {\n\n    let defaultConfig = {\n\n      'strokeWidth': 2,\n      'strokeDash': null,\n      'strokeColor': '#000',\n      'strokeOverColor': null,\n      'strokeCap': 'round',\n      'strokeJoin': 'round',\n      'strokeOpacity': 1,\n\n      'onComplete': null,\n      'onUpdate': null,\n      'onStart': null,\n      'onStrokeStart': null,\n      'onStrokeComplete': null,\n\n      'delay': 0,\n      'ease': null,\n      'overrideKey': null,\n      'drawSequential': true,\n      'speedMultiplier': 1,\n      'reverse': false,\n      'paused': false,\n      'progress': 0,\n\n      'longestDuration': 0,\n      'playhead': 0\n\n    };\n\n    let options = Object.assign(defaultConfig, config);\n\n    // TODO - remove overrideKey, user should organise svgData before init\n    // Set up path information\n    // if overrideKey has been defined - use overrideKey as key within the svgData object.\n    // else - use the elements id as key within the svgData object.\n    let target = options.overrideKey ? options.overrideKey : config.id;\n\n    options.width = options.svgData[target].dimensions.width;\n    options.height = options.svgData[target].dimensions.height;\n    options.paths = options.svgData[target].strokepath;\n    options.svg = this._getSVGElement('0 0 ' + options.width + ' ' + options.height);\n\n    return options;\n  }\n\n  _setupPaths() {\n\n    let startTime = this.options.reverse ? this.options.totalDuration : 0;\n\n    for (let i = 0; i < this.options.paths.length; i++) {\n\n      let path = this.options.paths[i];\n\n      path.progress = 0;\n      path.index = i;\n      path.el = this._getPath(i);\n      path.length = this._getPathLength(path.el);\n      path.delay = path.delay || 0;\n      path.duration = path.duration;\n      path.positions = this._getPathPoints(path.el, path.length);\n      path.ease = path.ease || null;\n\n      path.el.style.strokeDasharray = this._getStrokeDashArray(path, path.length);\n      path.el.style.strokeDashoffset = path.length;\n      path.el.style.display = 'block';\n      path.el.getBoundingClientRect();\n\n      path.onStrokeStart = path.onStrokeStart || null;\n      path.onStrokeComplete = path.onStrokeComplete || null;\n      path.onStrokeStartDone = false;\n      path.onStrokeCompleteDone = false;\n      path.onStrokeUpdate = path.onStrokeUpdate || null;\n\n      let startProgress;\n      let durationProgress = path.duration / this.options.totalDuration;\n\n      if (this.options.reverse) {\n        startTime -= path.duration;\n        startProgress = startTime / this.options.totalDuration;\n      } else {\n        if (this.options.drawSequential) {\n          startTime = this.options.playhead + this.options.delay;\n        } else {\n          startTime = path.delay + this.options.delay;\n        }\n        startProgress = startTime / this.options.totalDuration;\n      }\n\n      path.startTime = startTime;\n      path.startProgress = startProgress;\n      path.durationProgress = durationProgress;\n      this.options.playhead += (path.duration + path.delay);\n    }\n  }\n\n  /**\n   * adjustStartTime\n   * Responsible for managing time.\n   * @private\n   * @param  {number} timestamp identifies current time\n   * @param  {object} data      contains options set on init() and paint()\n   */\n  adjustStartTime(timestamp) {\n    this.options.startTime = timestamp - this.options.elapsedTime;\n    requestAnimationFrame((timestamp) => {\n      this._paint(timestamp);\n    });\n  }\n\n  /**\n   * _paint\n   * Responsible for animating paths.\n   * Path incrementation is performed using requestAnimationFrame.\n   * @private\n   * @param  {number} timestamp   identifies current time\n   * @param  {object} data        contains options set on init() and paint()\n   */\n  _paint(timestamp) {\n\n    // set startTime\n    if (!this.options.startTime) {\n      this.options.startTime = timestamp;\n    }\n\n    if (this.options.onUpdate !== null) {\n      this.options.onUpdate();\n    }\n\n    // set elapsedTime\n    this.options.elapsedTime = (timestamp - this.options.startTime);\n    this.options.progress = this._getProgress(\n      this.options.totalDuration,\n      this.options.startTime,\n      this.options.elapsedTime,\n      this.options.ease\n    );\n\n    this._updatePaths();\n\n    if (this.options.progress < 1) {\n      this.rAF = requestAnimationFrame((timestamp) => {\n        this._paint(timestamp);\n      });\n    } else {\n      if (this.options.onComplete !== null) {\n        this.options.onComplete();\n      }\n    }\n  }\n\n  _updatePaths() {\n    for (let i = 0; i < this.options.paths.length; i++) {\n      let path = this.options.paths[i];\n      let elapsedProgress = this._getElapsedProgress(path);\n\n      path.progress = this._getProgress(1, 0, elapsedProgress, path.ease);\n      this._setLine(path);\n      this._updatePosition(path);\n      this._updateStrokeCallbacks(path);\n    }\n  }\n\n  _getElapsedProgress(path) {\n\n    let elapsedProgress;\n\n    if (\n      this.options.progress > path.startProgress &&\n      this.options.progress < (path.startProgress + path.durationProgress)\n    ) {\n      elapsedProgress = (this.options.progress - path.startProgress) / path.durationProgress;\n    } else if (this.options.progress >= (path.startProgress + path.durationProgress)) {\n      elapsedProgress = 1;\n    } else if (this.options.progress <= path.startProgress) {\n      elapsedProgress = 0;\n    }\n\n    return elapsedProgress;\n  }\n\n  _getProgress(duration, start, elapsed, ease) {\n\n    let progress;\n\n    if (elapsed > 0 && elapsed < duration) {\n      if (ease) {\n        progress = this.easing[ease](elapsed, 0, 1, duration);\n      } else {\n        progress = elapsed / duration;\n      }\n    } else if (elapsed >= duration) {\n      progress = 1;\n    } else if (elapsed <= start) {\n      progress = 0;\n    }\n\n    return progress;\n  }\n\n  _setLine(path) {\n\n    let el = path.el;\n    let length = path.progress * path.length;\n\n    if (this.options.reverse || path.reverse) {\n      el.style.strokeDashoffset = -path.length + length;\n    } else {\n      el.style.strokeDashoffset = path.length - length;\n    }\n  }\n\n  _updateStrokeCallbacks(path) {\n\n    if (path.progress === 1) {\n\n      // fire onStrokeComplete callback\n      if (this.options.onStrokeComplete && !path.onStrokeCompleteDone) {\n        this.options.onStrokeComplete(path);\n\n        if (!path.onStrokeComplete) {\n          path.onStrokeCompleteDone = true;\n        }\n      }\n\n      // fire onStrokeComplete callback of each line\n      if (path.onStrokeComplete && !path.onStrokeCompleteDone) {\n        path.onStrokeComplete(path);\n        path.onStrokeCompleteDone = true;\n      }\n\n    } else if (path.progress > 0.00001) {\n\n      // fire onStrokeStart callback\n      if (this.options.onStrokeStart && !path.onStrokeStartDone) {\n        this.options.onStrokeStart(path);\n\n        if (!path.onStrokeStart) {\n          path.onStrokeStartDone = true;\n        }\n      }\n\n      // fire onStrokeStart callback of each line\n      if (path.onStrokeStart && !path.onStrokeStartDone) {\n        path.onStrokeStart(path);\n        path.onStrokeStartDone = true;\n      }\n\n      if (path.onStrokeUpdate) {\n        path.onStrokeUpdate(path);\n      }\n    }\n  }\n\n  /**\n   * _updatePosition\n   * Responsible for updating the paths x / y position.\n   * @private\n   */\n  _updatePosition(path) {\n    let index = Math.round((path.progress * (path.length - 1)));\n    let position = path.positions[index];\n\n    path.position = {\n      x: this.options.offset.left + position.x,\n      y: this.options.offset.top + position.y\n    };\n  }\n\n  _getTotalDuration(paths) {\n    let totalDuration = 0;\n\n    for (let i = 0; i < paths.length; i++) {\n      let pathDelay = paths[i].delay || 0;\n\n      totalDuration += (paths[i].duration + pathDelay);\n    }\n    return totalDuration;\n  }\n\n  _getLongestDuration(paths) {\n    let longestDuration = 0;\n\n    for (let i = 0; i < paths.length; i++) {\n      let pathDelay = paths[i].delay || 0;\n\n      if ((paths[i].duration + pathDelay) > longestDuration) {\n        longestDuration = (paths[i].duration + pathDelay);\n      }\n    }\n    return longestDuration;\n  };\n\n  /**\n   * _getPath\n   * Responsible for creating a svg path element, and setting attributes on path.\n   * @private\n   * @param  {object} data contains options set on init\n   * @param  {number} i    path index\n   * @return {object} path svg path element\n   */\n  _getPath(i) {\n    let path = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n\n    this.options.svg.appendChild(path);\n    this._setAttributes(path, this.options.paths[i]);\n    return path;\n  };\n\n  /**\n   * _getPathLength\n   * Responsible for returning a svg path length.\n   * @return {number} path length\n   */\n  _getPathLength(el) {\n    return Math.ceil(el.getTotalLength());\n  }\n\n  /**\n   * _getPathPoints\n   * Responsible for returning a svg path coords.\n   * @return {array} path coords\n   */\n  _getPathPoints(el, length) {\n    let arr = [];\n\n    for (let i = 0; i < length; i++) {\n      let position = el.getPointAtLength(i);\n\n      arr.push({\n        x: position.x,\n        y: position.y\n      });\n    };\n    return arr;\n  }\n\n  /**\n   * _getAttributes\n   * Returns an object of path attributes,\n   * selects either global options set on init or specific path option\n   * @private\n   * @param  {object} data  contains options set on init()\n   * @param  {object} value contains specific path options\n   * @return {object}       obj of path attributes\n   */\n  _setAttributes(path, data) {\n    path.setAttributeNS(null, 'd', data.path);\n    path.setAttributeNS(null, 'stroke', !data.strokeColor ? this.options.strokeColor : data.strokeColor);\n    path.setAttributeNS(null, 'fill', 'none');\n    path.setAttributeNS(null, 'stroke-opacity', !data.strokeOpacity ? this.options.strokeOpacity : data.strokeOpacity);\n    path.setAttributeNS(null, 'stroke-width', !data.strokeWidth ? this.options.strokeWidth : data.strokeWidth);\n    path.setAttributeNS(null, 'stroke-linecap', !data.strokeCap ? this.options.strokeCap : data.strokeCap);\n    path.setAttributeNS(null, 'stroke-linejoin', !data.strokeJoin ? this.options.strokeJoin : data.strokeJoin);\n  }\n\n  /**\n   * _getSVGElement\n   * Returns empty svg element with specified viewBox aspect ratio.\n   * @private\n   * @param  {string} viewBox\n   * @return {obj}    jquery wrapped svg el\n   */\n  _getSVGElement(viewBox) {\n    let svg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n\n    svg.setAttributeNS(null, 'viewBox', viewBox);\n    svg.setAttribute('xmlns', 'http://www.w3.org/2000/svg');\n    return svg;\n  };\n\n  /**\n   * _getStrokeDashArray\n   * @private\n   */\n  _getStrokeDashArray(path, length) {\n    let strokeDash;\n\n    if (path.strokeDash) {\n      strokeDash = this._getStrokeDashString(path.strokeDash, length);\n    } else if (this.options.strokeDash) {\n      strokeDash = this._getStrokeDashString(this.options.strokeDash, length);\n    } else {\n      strokeDash = length + ' ' + length;\n    };\n    return strokeDash;\n  }\n\n  /**\n   * _getStrokeDashString\n   * @private\n   */\n  _getStrokeDashString(dashArray, length) {\n    let strokeDashString = '';\n    let strokeDashArray = dashArray.split(',');\n    let strokeDashTotal = 0;\n    let strokeDashNum;\n    let strokeDashRemainder;\n\n    for (let i = strokeDashArray.length - 1; i >= 0; i--) {\n      strokeDashTotal += Number(strokeDashArray[i]);\n    };\n    strokeDashNum = Math.floor(length / strokeDashTotal);\n    strokeDashRemainder = length - (strokeDashNum * strokeDashTotal);\n    for (let i = strokeDashNum - 1; i >= 0; i--) {\n      strokeDashString += (dashArray + ', ');\n    };\n    let preArray = strokeDashString + strokeDashRemainder + ', ' + length;\n\n    return preArray.split(',').join('px,') + 'px';\n  }\n\n}\n\nwindow.LazyLinePainter = LazyLinePainter;\n"],"sourceRoot":""}